/*
Exerc√≠cio 3: Classificando N√∫meros
Descri√ß√£o: O usu√°rio deve inserir uma lista de n√∫meros separados por v√≠rgula, e o programa deve exibir os n√∫meros em ordem crescente e decrescente.

O pr√≥ximo passo √© voc√™ implementar o JavaScript! A l√≥gica deve fazer o seguinte:

Receber os n√∫meros do campo de entrada.
Validar a entrada: exibir uma mensagem de erro se houver valores inv√°lidos.
Ordenar os n√∫meros em ordem crescente e decrescente.
Exibir as listas ordenadas nos ul de "Ordem Crescente" e "Ordem Decrescente".
Quando estiver pronto, compartilhe a solu√ß√£o que voc√™ encontrou! üöÄ
*/

const numberInput = document.getElementById("numberInput");
const sortButton = document.getElementById("sortButton");
const errorMessage = document.getElementById("errorMessage");
const ascendingList = document.getElementById("ascendingList");
const descendingList = document.getElementById("descendingList");


sortButton.addEventListener("click", () => {
    ascendingList.innerHTML = "";
    descendingList.innerHTML = "";
    let resultError = "";

    let increasingValue = numberInput.value.trim().split(/\,+/).sort((a,b) => a-b);
    let decreasingValue = numberInput.value.trim().split(/\,+/).sort((a,b) => b-a);

    increasingValue.forEach(e => {
        const parseValue = parseFloat(e);

        if(isNaN(parseValue)) {
            resultError += `${parseValue}, `;
        }else{
            const li = document.createElement("li");
            li.innerText = `${parseValue}`;
            ascendingList.appendChild(li);
        }
    })

    decreasingValue.forEach(e => {
        const li = document.createElement("li");
        li.innerText = `${e}`;
        descendingList.appendChild(li);
    })

    errorMessage.innerText = `N√£o s√£o n√∫meros v√°lidos ${resultError}`;
    numberInput.value = "";
})